#!/bin/sh
#
#  Part of https://github.com/jaclu/simple_sync
#
#  License: MIT
#
#  Copyright (c) 2023: Jacob.Lundqvist@gmail.com
#
#  Super simple two way sync, created for the iSH App, linux like,
#  but not able to run any normal shared file-systems between nodes
#  beyond sharing an iCloud folder - great for two iPads using the same
#  AppleID, not so much if you are sharing between iSH and a linux node.
#  You could obviously use a shared git-repo, the drawback then is that
#  it is completely manual, you must remember to commit, push and pull.
#
#  The aim for this is when you work on something in both ends, and you
#  want to easily change sync direction.
#  Run this on the "active" side, when you start working on the other end
#  just fire this up on that node, first it terminates this on the other
#  end, then it will continously sync content there, until you stop it
#  or it gets terminated by the other end starting to source the syncing.
#


#
#  For simplicity use the same location on both nodes.
#  Ensure that the owner is the local user given below,
#  doesnt need to be the same usernames
#
sync_this="/opt/sync_this"

#
#  since iSH struggles with finding its own ip#, simplest is to just
#  create a random file indicating which is host_a
#  host b is identified by not having this file
#
host_a_indicator="/etc/opt/host_a"

#
#  If either is running sshd on a port other than 22, add this in
#  ~/.ssh/config on the other end, using the non local ip#/hostname
#  This way both ssh and rsync uses the right port
#
#  host 192.168.1.10
#     port 7216
#

#  can be hostname or ip# doesnt matter which
host_a="jacpad"
host_b="hetz1"

#  user owning the synced files on each end
user_a="jaclu"
user_b="jaclu"


#  How many seconds to sleep between each sync
sync_sleep=5



# ==========================================================
#
#  Normally nothing needs to be configured past this point
#
# ==========================================================

if [ -f "$host_a_indicator" ]; then
    dst_user="$user_b"
    dst_host="$host_b"
else
    dst_user="$user_a"
    dst_host="$host_a"
fi

echo "Will sync to $dst_host every $sync_sleep seconds"

#
#  First kill a potential syncer on the other end
#
prog_name=$(basename "$0")

echo "Killing sync at other end ($prog_name)"

# shellcheck disable=SC2029
ssh "${dst_user}@$dst_host" killall "$prog_name"
ex_code="$?"
if [ "$ex_code" -eq 255 ]; then
    echo
    echo "Failed to connecto to $dst_host - is it running sshd?"
    echo
    exit 1
fi

# give other rsync time to fully terminate
sleep 3

sync_this_parrent_dir="$(dirname "$sync_this")"

#  keep syncing from this end forever
while true; do
    rsync -avhP --delete "$sync_this" "${dst_user}@${dst_host}:$sync_this_parrent_dir"
    # give an indication when last sync completed
    date
    sleep "$sync_sleep"
done
